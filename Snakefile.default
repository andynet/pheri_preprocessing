configfile: "./config.yaml"

MAIN_DIR   = config['main_dir']
DATA_DIR   = config['data_dir']

SCRIPT_DIR = config['main_dir'] + '/scripts'
SNAKE_DIR  = config['main_dir'] + '/snakes'

# semi-constants
THREADS = 12
DATABASES = ['genbank', 'refseq', 'phagesdb']
SUFFIXES = ['genomes.fasta', 'genomes.conversion']
VARIANCE_THRESHOLD = 0.01

# if HOSTS = '' , TRAIN_NUM should be bigger than 1
# next line generated by: less 004_hosts.counts | head -n 15 | grep -v no_host | sed 's/\s.*\s//' | tr '\n' ',' | less
HOSTS = ''
TRAIN_NUM = 14
TRAIN_PERCENTAGE = 0.8

# pipeline will do annotation of these clusters using interproscan
CLUSTERS = []
# next line generated by: less 006_test.genomes.fasta | grep "^>" | tr -d '>' | tr '\n' ',' | less
PHAGES = ''

CLUSTER_METHODS = [
                   'needle_mcl',
                   'mcl',
                   'spectral',
                   ]

TYPE = [
        'fs',
        'raw',
        ]

rule retrieve_data:
  input:
    expand(['{data_dir}/003_deduplicated.genomes.fasta', '{data_dir}/004_genera.tsv'],
            data_dir=DATA_DIR,
            ),

#rule analyse_data:
#  input:
#    '{data_dir}/013_models.{clustermethod}.{type}.completed',
#
#rule evaluate_models:
#  input:
#    expand('{data_dir}/015_{set_name}_{cluster_method}.{type}.{spec}.stats',
#            data_dir=DATA_DIR,
#            set_name='test',
#            cluster_method=CLUSTER_METHODS,
#            type=TYPE,
#            spec=HOSTS.split(',')),
#
#rule annotate_clusters:
#  input:
#    expand('{data_dir}/011_{cluster_method}_cluster_annotations/Cluster_{i}.result',
#            data_dir=DATA_DIR,
#            cluster_method=CLUSTER_METHODS,
#            i=CLUSTERS),

include: '{snake_dir}/rules.snake'.format(snake_dir=SNAKE_DIR)
